# specify, if you want to use Unity and the network interface. otherwise, you can still perform "offline" simulations 
RemoteDesktop: False # if true, the Unity environment and the network interface are used. if false, pre-generated data from saved simulations is used

# if you use the Unity environment (RemoteDesktop == True), you need to specify these parameters
VR_IP_ADDRESS: '192.168.2.106' # enter the IP address of the Unity server here (can also be a local IP if you use WSL2)
VR_UNITY_PORT: 1337 # Unity port (default: 1337)
VR_AGENT_NO: 0 # agent number (default: 0)

# if you run a simulation for the first time, you need to generate and save some large connections. you can set it to false afterwards.
create_connections: True # if true, create and save large connections. otherwise, load saved connections from memory

# if you want to see what's going on in the network, it might sense to look at the neuronal activity. these flags specify which parts of the simulation get recorded into .mat files
record_encoding: False # if true, activity from key populations of the ventral and dorsal stream during encoding are saved. also, a small video is created in the Results/ folder (care: needs a lot of memory)
record_recall: False # if true, activity from  key populations of the ventral and dorsal stream during recall are saved
record_SM: False # if true, activity for the SM model is saved
create_video: False # if true, individual frames for video creation will be saved (care: takes 4-6 hours and will create ~2000 frames)
create_report: False # create an ANNarchy network report

# if RemoteDesktop == False, replication_sim == True is required to specify a simulation from which visual and positional information are loaded.
# it RemoteDesktop == True, only the position and target object corresponding to the replicated simulation are used, all the visual information will come from the VRreplication_sim: True # set to true if you want to replicate an existing simulation
replication_sim: True # set to true if you want to replicate an existing simulation
replication_exp: 13 # experiment to replicate [11, 12, 13, 21, 22, 23, 3]
replication_num: 1 # simulation number to replicate (as provided in Results/Exp#/Simulation_#; uses the corresponding visual field, position, and target object)

# if RemoteDesktop == True, you can control control the simulation scenarios 
Experiment: 13 # chose experiment number (as introduced in the paper: 11, 12, 13, 21, 22, 23, 3; run all simulations: 0)
N_simulations: 1 # how many simulations to run in a row (in the current implementation only makes sense for random simulations with replication_sim == False and SET_TASK == False)

# custom task setting (usually only makes sense if N_simulations == 1)
# care: only works if replication_sim == False due to obvious reasons
SET_TASK: False # if true, you can define a target object and the agent position
TARGET: 1 # possible target objects are: 0 (yellow crane), 1 (green crane), 2 (green racecar)
POSITION:
  - 8.5 # x position in the room (for the default arrangement of objects it should be between 7.5 and 9.5)
  - 4.7 # y position in the room (for the default arrangement of objects it should be between 4.0 and 6.0)
  - 212 # head direction in degrees clockwise, starting from north (for the default arrangement of objects it should be somewhere between 210 and 220, depending on the position)
  - -15 # eye tilt (for the default arrangement of objects it should be somewhere between -10 and -15, depending on the position)